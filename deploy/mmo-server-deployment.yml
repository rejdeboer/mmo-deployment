# TODO: I'm not sure if agones is the right tool for this mmo
# Might need to refactor to using statefulsets later
apiVersion: agones.dev/v1
kind: Fleet
metadata:
  name: mmo-server
  namespace: default
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: "25%"
      maxUnavailable: "25%"
  template:
    metadata:
      labels:
        # TODO: Do we need this?
        realm: main
    spec:
      container: mmo-server
      ports:
      - name: default
        protocol: UDP
        containerPort: 8000
      template:
        spec:
          containers:
            - name: mmo-server
              image: rejdeboer/mmo-server:latest
              resources:
                requests:
                  memory: "256Mi"
                  cpu: "300m"
                limits:
                  memory: "512Mi"
                  cpu: "500m"
              ports:
                - containerPort: 8000
                  protocol: UDP
              volumeMounts:
              - name: metrics
                mountPath: /metrics
              env:
                - name: ENVIRONMENT
                  value: production
                - name: APP_SERVER__HOST
                  value: "0.0.0.0"
                - name: APP_SERVER__PORT
                  value: "8000"
                - name: APP_SERVER__NETCODE_PRIVATE_KEY
                  valueFrom:
                    secretKeyRef:
                      name: netcode-secret
                      key: private-key
                - name: APP_SERVER__METRICS_PATH
                  value: /metrics/game.prom
                - name: APP_DATABASE__PORT
                  value: "5432"
                - name: APP_DATABASE__DB_NAME
                  value: "mmo"
                - name: APP_DATABASE__HOST
                  value: "postgres-main-rw"
                - name: APP_DATABASE__USERNAME
                  valueFrom:
                    secretKeyRef:
                      name: pg-secret
                      key: username
                - name: APP_DATABASE__PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: pg-secret
                      key: password
            - name: metrics-exporter
              image: nginx:alpine
              resources:
                requests:
                  memory: "32Mi"
                  cpu: "50m"
                limits:
                  memory: "64Mi"
                  cpu: "100m"
              ports:
                - name: http-metrics
                  containerPort: 80
              volumeMounts:
              - name: metrics
                mountPath: /usr/share/nginx/html
          volumes:
          - name: metrics
            emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: mmo-server-metrics
  namespace: default 
  labels:
    app: mmo-server-metrics
spec:
  selector:
    agones.dev/fleet: mmo-server
  ports:
    - name: http-metrics
      protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: mmo-server-metrics
  namespace: monitoring 
  labels:
    release: kube-prometheus-stack
spec:
  selector:
    matchLabels:
      app: mmo-server
  namespaceSelector:
    matchNames:
    - default
  endpoints:
  - port: http-metrics
    path: /game.prom
    interval: 15s
