apiVersion: v1
kind: Service
metadata:
  name: web-server
  namespace: default
  labels:
    app: web-server
spec:
  ports:
    - name: web-server
      port: 80
      targetPort: 8000
      protocol: TCP
  selector:
    app: web-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-server
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web-server
  template:
    metadata:
      labels:
        app: web-server
    spec:
      serviceAccountName: web-server-sa
      containers:
        - name: web-server
          image: rejdeboer/web-server:latest
          resources:
            requests:
              memory: "256Mi"
              cpu: "300m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          ports:
            - containerPort: 8000
          env:
            - name: ENVIRONMENT
              value: production
            - name: APP_APPLICATION__HOST
              value: "0.0.0.0"
            - name: APP_APPLICATION__PORT
              value: "8000"
            - name: APP_APPLICATION__JWT_SIGNING_KEY
              valueFrom:
                secretKeyRef:
                  name: jwt-secret
                  key: signing-key
            - name: APP_APPLICATION__NETCODE_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: netcode-secret
                  key: private-key
            - name: APP_DATABASE__PORT
              value: "5432"
            - name: APP_DATABASE__DB_NAME
              value: "mmo"
            - name: APP_DATABASE__HOST
              value: "postgres-main-rw"
            - name: APP_DATABASE__USERNAME
              valueFrom:
                secretKeyRef:
                  name: pg-secret
                  key: username
            - name: APP_DATABASE__PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pg-secret
                  key: password
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: web-server-sa
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: service-reader-role
  namespace: default
rules:
- apiGroups: ["agones.dev"] 
  resources: ["gameservers"]
  verbs: ["get", "list"] 
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: web-server-can-read-gameservers
  namespace: default
subjects:
- kind: ServiceAccount
  name: web-server-sa
  namespace: default
roleRef:
  kind: Role
  name: service-reader-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: web-server
  namespace: monitoring 
  labels:
    release: kube-prometheus-stack
spec:
  selector:
    matchLabels:
      app: web-server
  namespaceSelector:
    matchNames:
    - default
  endpoints:
  - port: web-server
    path: /metrics
    interval: 15s
